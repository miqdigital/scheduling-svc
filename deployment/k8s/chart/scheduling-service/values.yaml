# Default values for scheduling-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: 836079437595.dkr.ecr.us-east-1.amazonaws.com/platform-services
  tag: scheduling-server-1.6.0-SNAPSHOT
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false

service:
  type: ClusterIP
  port: 80

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

vault:
  init:
    image: 836079437595.dkr.ecr.us-east-1.amazonaws.com/devops:vault-init
  endpoint: https://vault.dev.miqdigital.com/v1
  engineName: Platform-Vault-Kubernetes

env:
  JAVA_OPTS: "-Dspring.config.location=/opt/apps/.config/app-secrets/app-secret.properties,/opt/apps/.config/app-config/application.yaml"

monitoring:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/team: "PLATFORMSERVICES"
    prometheus.io/product: "SCHEDULING_SERVICE"
    prometheus.io/service: "SCHEDULING_SERVER"
    iam.amazonaws.com/role: platform-scheduling-role

config:
  environment: environment
  server:
    port: 8080

  management:
    endpoints:
      enabledbydefault: true
      web:
        exposure:
          include: "health,prometheus"
    endpoint:
      health:
        showdetails: always
        showcomponents: always

  application:
    httpJobCallBackTimeout: 10
    minSchedulingInterval: 5
    messagingPublishEndpoint: "https://integration-messaging-gateway.dev.miqdigital.com/publish"
    messagingDefaultPublishTopic: "integration-scheduling-pub"
    apiGatewayToken: ${API_GATEWAY_TOKEN}
    schedulingServiceEnv: schedulingServiceEnv

  #Spring configuration
  spring:
    application:
      name: scheduler-service
    jackson:
      serialization:
        indent_output: true
        WRITE_DATES_AS_TIMESTAMPS: false
      deserialization:
        ADJUST_DATES_TO_CONTEXT_TIME_ZONE: false

      mapper:
        accept_case_insensitive_properties: true
    jpa:
      showsql: false
      openinview: false
      hibernate:
        ddlauto: none
        naming:
          physicalstrategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
          implicitstrategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
          generate_statistics: true
    datasource:
      name: db_name
      url: db_url
      username: scheduling_master
      password: ${password}
      driverclassname: org.postgresql.Driver
      hikari:
        poolname: hikari-pool
      quartzdatasource:
        name: quartzdatasource-NAME
        maxConnections: 15
        username: scheduling_master
        password: ${password}
    quartz:
      jdbc:
        initializeschema: never
      jobstoretype: jdbc
      properties:
        org:
          quartz:
            scheduler:
              instanceId: AUTO
              instanceName: QuartzPostgresScheduler_name
            threadPool:
              class: org.quartz.simpl.SimpleThreadPool
              threadCount: 10
              threadsInheritContextClassLoaderOfInitializingThread: true
            jobStore:
              class: org.quartz.impl.jdbcjobstore.JobStoreTX
              driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
              tablePrefix: QRTZ_
              isClustered: true
              #misfire 3 minutes = 3*60*1000
              misfireThreshold: 180000
            plugin:
              shutdownHook:
                class: org.quartz.plugins.management.ShutdownHookPlugin
                cleanShutdown: false
              jobHistory:
                class: org.quartz.plugins.history.LoggingJobHistoryPlugin
                jobToBeFiredMessage: "Job [{1}.{0}] to be fired by trigger [{4}.{3}], re-fire: {7}"
                jobSuccessMessage: "Job [{1}.{0}] execution complete and reports: {8}"
                jobFailedMessage: "Job [{1}.{0}] execution failed with exception: {8}"
                jobWasVetoedMessage: "Job [{1}.{0}] was vetoed. It was to be fired by trigger [{4}.{3}] at: {2, date, dd-MM-yyyy HH:mm:ss.SSS}"
              triggerHistory:
                class: org.quartz.plugins.history.LoggingTriggerHistoryPlugin
                triggerFiredMessage: "Trigger [{1}.{0}] fired job [{6}.{5}] scheduled at: {2, date, dd-MM-yyyy HH:mm:ss.SSS}, next scheduled at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}"
                triggerCompleteMessage: "Trigger [{1}.{0}] completed firing job [{6}.{5}] with resulting trigger instruction code: {9}. Next scheduled at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}"
                triggerMisfiredMessage: "Trigger [{1}.{0}] misfired job [{6}.{5}]. Should have fired at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}"
              jobExecutionHistory:
                class: com.mediaiq.caps.platform.scheduling.util.ScheduledTaskExecutionHistoryPlugin
