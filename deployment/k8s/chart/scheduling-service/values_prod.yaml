replicaCount: 2

image:
  repository: 230367374156.dkr.ecr.us-east-1.amazonaws.com/platform-services
  tag: scheduling-server-1.6.0-SNAPSHOT
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: private-nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  paths:
    - /
  hosts:
    - scheduling.mediaiqdigital.com
  tls: []

config:
  application:
    messagingPublishEndpoint: "https://messaging-gateway.mediaiqdigital.com/publish"
    messagingDefaultPublishTopic: "production-scheduling-pub"
  environment: production
  spring:
    datasource:
      url: jdbc:postgresql://notificationrds-prod.cmfydxrklw15.us-east-1.rds.amazonaws.com:5432/scheduling_production
      username: miq_admin
      instanceName: QuartzPostgresScheduler_PRODUCTION
      quartzdatasourcename: quartzDataSource-PRODUCTION

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 512Mi

monitoring:
  annotations:
    prometheus.io/env: "PRODUCTION"

vault:
  enabled: true
  authName: kubernetes-prod
  roleName: pt-scheduling-production
  location: scheduling-service-production
  engineName: Platform-Vault-Kubernetes
  init:
    image: 230367374156.dkr.ecr.us-east-1.amazonaws.com/devops:vault-init
  endpoint: https://vault.miqdigital.com/v1


nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - scheduling-service-production
        topologyKey: "failure-domain.beta.kubernetes.io/zone"

timestamp: A100
