apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scheduling-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "scheduling-service.name" . }}
    helm.sh/chart: {{ include "scheduling-service.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "scheduling-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "scheduling-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        sidecar.istio.io/inject: "{{ .Values.istio.enabled }}"
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      volumes:
        - name: app-config
          configMap:
            name: {{ template "scheduling-service.fullname" . }}-configuration
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
          {{- if .Values.jacocoEnabled | default false }}
          - "sh"
          - "-c"
          - >
            curl https://repo1.maven.org/maven2/org/jacoco/jacoco/0.8.3/jacoco-0.8.3.zip --output /usr/src/jacoco.zip; unzip /usr/src/jacoco.zip -d /usr/src/jacoco; exec java -javaagent:/usr/src/jacoco/lib/jacocoagent.jar=output=tcpserver,address=*,port=36320 ${JAVA_OPTS} -jar app.jar;
          {{- else }}
          - "sh"
          - "-c"
          - >
            exec java ${JAVA_OPTS} -jar app.jar;
          {{- end }}
          volumeMounts:
            - name: app-config
              mountPath: /opt/apps/.config/app-config
          envFrom:
            - configMapRef:
                name: {{ template "scheduling-service.fullname" . }}-environment
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 60
            failureThreshold: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 20
            failureThreshold: 10
            periodSeconds: 10
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: jacoco-port
              containerPort: 36320
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
